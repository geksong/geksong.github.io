<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sixpence</title>
    <description>Do not forget to early loyal</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 22 Oct 2018 16:57:45 +0800</pubDate>
    <lastBuildDate>Mon, 22 Oct 2018 16:57:45 +0800</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>Docker image build for cobar</title>
        <description>&lt;p&gt;由于cobar的开源项目里没有提供Dockerfile，无法直接生成docker镜像，需要自己编写Dockerfile并build镜像。这里是将配置和cobar本身的jar及启动脚本打在一个镜像里。&lt;a href=&quot;https://github.com/geksong/cobar-docker.git&quot;&gt;项目路径&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;示例里将mysql和cobar都在同一个宿主机的不同container里，本机的&lt;code class=&quot;highlighter-rouge&quot;&gt;3307,3308,3309&lt;/code&gt;三个端口分别对应于本机的三个mysql容器，实际存储的数据目录都在宿主机的&lt;code class=&quot;highlighter-rouge&quot;&gt;/dockerenv/cobarmysql/mysql/3307/data, /dockerenv/cobarmysql/mysql/3308/data/, /dockerenv/cobarmysql/mysql/3309/data/&lt;/code&gt;，cobar container和mysql container位于同一个名为&lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt;的docker network。部署如下图：
&lt;img src=&quot;/assets/images/docker-cobar/container-distribute.png&quot; alt=&quot;&quot; /&gt;
三个mysql容器内的3306端口映射到宿主机的&lt;code class=&quot;highlighter-rouge&quot;&gt;3307,3308,3309&lt;/code&gt;三个端口，cobar容器的&lt;code class=&quot;highlighter-rouge&quot;&gt;8066&lt;/code&gt;端口则直接映射到宿主机的&lt;code class=&quot;highlighter-rouge&quot;&gt;8066&lt;/code&gt;端口。&lt;/p&gt;

&lt;p&gt;首先启动三个mysql的容器，这里使用5.7.23的mysql镜像，root的密码初始化为123456&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d -p 3307:3306 -v ~/dockerenv/cobarmysql/mysql/3307/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --restart always --name cobar-mysql-3307 --network private mysql:5.7.23

docker run -d -p 3308:3306 -v ~/dockerenv/cobarmysql/mysql/3308/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --restart always --name cobar-mysql-3308 --network private mysql:5.7.23

docker run -d -p 3309:3306 -v ~/dockerenv/cobarmysql/mysql/3309/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --restart always --name cobar-mysql-3309 --network private mysql:5.7.23
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;执行上述命令之后，可以通过docker container查看下容器是否已正常启动&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker container ls -a | grep mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果看到三个mysql的容器都是UP的状态，则说明mysql容器已经正常启动，接下来开始准备cobar的docker镜像。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;本地创建一个cobar目录&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir cobar
cd cobar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;从cobar的release目录下载稳定版，这里用&lt;code class=&quot;highlighter-rouge&quot;&gt;1.2.7&lt;/code&gt;版本&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://github.com/alibaba/cobar/releases/download/v1.2.7/cobar-server-1.2.7.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;下载完成之后，执行解压&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvzf cobar-server-1.2.7.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;解压之后会在当前目录生成&lt;code class=&quot;highlighter-rouge&quot;&gt;cobar-server-1.2.7&lt;/code&gt;目录
其中&lt;code class=&quot;highlighter-rouge&quot;&gt;cobar-server-1.2.7/bin&lt;/code&gt;是cobar的启停脚本，&lt;code class=&quot;highlighter-rouge&quot;&gt;cobar-server-1.2.7/conf&lt;/code&gt;是cobar的配置文件，这里需要将conf里的&lt;code class=&quot;highlighter-rouge&quot;&gt;rule.xml,schema.xml,server.xml&lt;/code&gt;三个文件拷贝到当前目录，然后修改其中的集群，用户名和密码等配置，docker打包镜像的时候，需要将这三个文件拷贝到镜像里，覆盖&lt;code class=&quot;highlighter-rouge&quot;&gt;cobar-server-1.2.7/conf&lt;/code&gt;下的配置文件。
conf默认的配置里提供了一个dbtest的schema配置，这里示例基本不怎么修改，只修改&lt;code class=&quot;highlighter-rouge&quot;&gt;schema.xml&lt;/code&gt;中的&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;dataSource&amp;gt;&lt;/code&gt;节点内容，因为其中配置了cobar代理的多个mysql节点的ip和端口，这里的ip需要换成docker容器网络内的ip，不能写127.0.0.1，因为cobar运行在容器里，127.0.0.1是他自己，并不是宿主机网络ip。mysql在容器网络内的ip可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;docker network inspect private | grep -A 5 mysql&lt;/code&gt;查询到&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;dataSource name=&quot;dsTest&quot; type=&quot;mysql&quot;&amp;gt;
    &amp;lt;property name=&quot;location&quot;&amp;gt;
      &amp;lt;location&amp;gt;172.18.0.12:3307/dbtest&amp;lt;/location&amp;gt;
      &amp;lt;location&amp;gt;172.18.0.13:3308/dbtest&amp;lt;/location&amp;gt;
      &amp;lt;location&amp;gt;172.18.0.14:3309/dbtest&amp;lt;/location&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property name=&quot;user&quot;&amp;gt;root&amp;lt;/property&amp;gt;
    &amp;lt;property name=&quot;password&quot;&amp;gt;123456&amp;lt;/property&amp;gt;
    &amp;lt;property name=&quot;sqlMode&quot;&amp;gt;STRICT_TRANS_TABLES&amp;lt;/property&amp;gt;
&amp;lt;/dataSource&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;编写cobar的Dockerfile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基础镜像使用openjdk:8，因为cobar本身需要java运行环境。容器内我们以&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/cobar&lt;/code&gt;作为cobar的工作目录，注意一定要创建&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/cobar/logs&lt;/code&gt;目录，因为cobar启动的时候写日志在这个目录，但是并不会自己生成logs目录。这里容器的启动入口，是一个自定义的&lt;code class=&quot;highlighter-rouge&quot;&gt;./bin/run.sh&lt;/code&gt;，而不是cobar自带的&lt;code class=&quot;highlighter-rouge&quot;&gt;./bin/startup.sh&lt;/code&gt;脚本，是因为cobar启动的时候不是一个交互式tty，docker会认为startup.sh执行完成后就结束了，容器会自动exit。&lt;code class=&quot;highlighter-rouge&quot;&gt;./bin/run.sh&lt;/code&gt;在其中以&lt;code class=&quot;highlighter-rouge&quot;&gt;tail -f&lt;/code&gt;命令结束，维持了一个交互式命令，容器就不会自动退出
Dockerfile如下:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM openjdk:8
COPY ./cobar-server-1.2.7 /usr/local/cobar
COPY ./server.xml /usr/local/cobar/conf/server.xml
COPY ./scheme.xml /usr/local/cobar/conf/schema.xml
COPY ./rule.xml /usr/local/cobar/conf/rule.xml
COPY ./run.sh /usr/local/cobar/bin/run.sh
RUN mkdir -p /usr/local/cobar/logs
WORKDIR /usr/local/cobar
EXPOSE 8066
ENTRYPOINT exec /bin/sh ./bin/run.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;run.sh如下:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;touch file.log

/bin/sh ./bin/startup.sh

tail -f file.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;创建镜像&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dockerfile准备好之后，就行开始打包镜像了。在当前目录执行如下命令&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build -t org.sixpence.cordock:0.0.1 .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Sending build context to Docker daemon  3.206MB
Step 1/10 : FROM openjdk:8
 ---&amp;gt; 81f83aac57d6
Step 2/10 : COPY ./cobar-server-1.2.7 /usr/local/cobar
 ---&amp;gt; Using cache
 ---&amp;gt; 394f864871af
Step 3/10 : COPY ./server.xml /usr/local/cobar/conf/server.xml
 ---&amp;gt; Using cache
 ---&amp;gt; 182a4cf9b73f
Step 4/10 : COPY ./schema.xml /usr/local/cobar/conf/schema.xml
 ---&amp;gt; Using cache
 ---&amp;gt; 3ce43783b97a
Step 5/10 : COPY ./rule.xml /usr/local/cobar/conf/rule.xml
 ---&amp;gt; Using cache
 ---&amp;gt; 704b8eeb69ea
Step 6/10 : COPY ./run.sh /usr/local/cobar/bin/run.sh
 ---&amp;gt; Using cache
 ---&amp;gt; 100dc7313542
Step 7/10 : RUN mkdir -p /usr/local/cobar/logs
 ---&amp;gt; Using cache
 ---&amp;gt; a845b1563049
Step 8/10 : WORKDIR /usr/local/cobar
 ---&amp;gt; Using cache
 ---&amp;gt; 5982987498d0
Step 9/10 : EXPOSE 8066
 ---&amp;gt; Using cache
 ---&amp;gt; 19ee59d5f852
Step 10/10 : ENTRYPOINT exec /bin/sh ./bin/run.sh
 ---&amp;gt; Using cache
 ---&amp;gt; ffbacc43c43c
Successfully built ffbacc43c43c
Successfully tagged org.sixpence.cordock:0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;则镜像打包完成，通过&lt;code class=&quot;highlighter-rouge&quot;&gt;docker images | grep cordock&lt;/code&gt;可以看到本地的镜像仓库已经有刚打出来的镜像&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;org.sixpence.cordock                                                 0.0.1                                      ffbacc43c43c        8 hours ago         626MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;运行cobar容器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;执行docker run命令则可以创建容器，并启动&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d -p 8066:8066 -e TZ=&quot;Asia/Shanghai&quot; --init --name cobar-default --network private org.sixpence.cordock:0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这里的&lt;code class=&quot;highlighter-rouge&quot;&gt;-e TZ=&quot;Asia/Shanghai&quot;&lt;/code&gt;用来指定容器的时区，否则时间会和国内时间不一致。&lt;code class=&quot;highlighter-rouge&quot;&gt;--init&lt;/code&gt;显示指定容器启动完整的init system进程，这样我们的cobar进程就不会占用了1号进程。
执行完成之后，通过&lt;code class=&quot;highlighter-rouge&quot;&gt;docker container ls -a | grep cobar&lt;/code&gt;能看到cobar容器状态是UP。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;client连接&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;通过mysql客户端&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;cobar本身是完全实现mysql的通讯协议的，所以基本上所有的mysql客户端都可以连接，只是有一些命令是禁止，比如join操作。其他的使用上基本上没差别&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;通过java&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;cobar官方提供了对应Driver，主要是2.0版本的driver提供了&lt;code class=&quot;highlighter-rouge&quot;&gt;cobar_cluster&lt;/code&gt;的支持，如果需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;cobar_cluster&lt;/code&gt;的高可用，则需要&lt;code class=&quot;highlighter-rouge&quot;&gt;server.xml&lt;/code&gt;中配置&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cluster&amp;gt;&lt;/code&gt;节点。否则会找不到cluster&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 10 Oct 2018 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2018/10/docker-cobar/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/10/docker-cobar/</guid>
        
        
      </item>
    
      <item>
        <title>使docker容器内的进程不以pid=1运行</title>
        <description>&lt;p&gt;在docker容器内默认通过dockerfile里的CMD/ENTRYPOINT执行的命令的进程是pid为1的进程。但在linux系统里pid=1是系统内所有进程的父进程，非docker的linux系统pid=1的是init进程，其他的进程都直接或间接的成为它的子进程
&lt;img src=&quot;/assets/images/docker-pid1/linux-process-struct.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在大多数情况下docker容器以pid=1运行应用程序进程，实际没什么问题，但当应用程序的进程派生出子进程的时候，而其父进程挂起之后，可能会导致派生出的子进程无法被回收。这是因为在linux系统里pid=1的进程默认要承担一个责任，就是接管游离的孤立进程。比如上图中，如果child(2)进程死掉了，而child(5)因为某些原因未能正常处理child(2)的关闭信号，导致没关闭，而是还在运行，此时child(5)进程就会被从进程树里孤立，处于无人管辖的状态
&lt;img src=&quot;/assets/images/docker-pid1/linux-process-orphaned.png&quot; alt=&quot;&quot; /&gt;
在这种情形下，child(5)会被init进程接管
&lt;img src=&quot;/assets/images/docker-pid1/linux-process-adopt.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;假如在接管游离进程的时候，pid=1的进程是我们应用程序进程，而游离的进程假如说是一个linux里的grep进程，此时即使把child(5)这个进程托管给pid=1的进程，但是因为我们的应用程序进程并没有实现处理这类进程的能力，就无法对这个游离进程进行回收，就会造成游离进程一直占用资源，无法回收。
所以在docker里运行时不要让应用程序的进程占用pid=1，&lt;code class=&quot;highlighter-rouge&quot;&gt;docker run&lt;/code&gt;命令提供了&lt;code class=&quot;highlighter-rouge&quot;&gt;--init&lt;/code&gt;参数以保证容器启动一个完整的linux init system进程，这样就不会出现应用程序占用了pid=1。
&lt;img src=&quot;/assets/images/docker-pid1/docker-run-init.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Sep 2018 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2018/09/docker-pid1/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/docker-pid1/</guid>
        
        
      </item>
    
      <item>
        <title>redis cluster</title>
        <description>&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;redis cluster是redis3.0版本官方退出的一种集群方案。目前redis的集群方案主要有三种方式。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一种是在客户端进行key分片。这种一般都是基于一致性hash算法实现，如果集群要扩容必须要手动操作，且无法对客户端透明，因为客户端必须要跟集群里所有的节点进行连接&lt;/li&gt;
  &lt;li&gt;第二种是代理分片，即把第一种种的分片事情交由一个中间代理去专职处理，比如codis,twemproxy，代理负责命令转发，命令的执行路径基本上是client-&amp;gt;proxy-&amp;gt;redisserver的过程。这种方式
能把分片对客户端完全透明，且能够完全跟redis本身的通讯协议保持一致，扩容，缩容，故障转移都只会集中在运维层，客户端无需感知&lt;/li&gt;
  &lt;li&gt;第三种是在redisserver负责分片。这种集群里每个master节点都负责维护一部分的hash slots，所有的节点之间通过p2p协议进行自身状态的广播，以达到最终在某个时间点能够达到全局的数据一致性。
所以这种方式具有天然的去中心化性，集群扩容对于客户端也是透明的，通过多数派的投票能在某个master节点down机之后，多数的master能从down机的master节点的slave节点中选举出替代节点，从而实现自动故障转移&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;redis cluster正是这第三种方式的实现，redis cluster总共提供了16384个hash slots，集群中的所有master节点各自负责其中的一部分slots，集群中每个节点都会和其他的节点通讯，所以任何一个节点都会知道其他
所有节点的状态，这也是redis cluster能够自动实现故障转移的基础。&lt;/p&gt;

&lt;h2 id=&quot;搭建一个redis-cluster&quot;&gt;搭建一个redis cluster&lt;/h2&gt;
&lt;p&gt;要建立一个redis cluster集群，集群内的所有节点都需要以cluster模式运行，这可以在每个节点的redis.conf中进行配置。这里我总共配置了6个节点，分别是本地的&lt;code class=&quot;highlighter-rouge&quot;&gt;7000,7001,7002,7100,7101,7102&lt;/code&gt;六个端口，
其中的70xx端口的节点将作为master节点，而71xx端口的节点将作为slave节点。每个节点的redis.conf配置都如下，只是端口不同&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;port 7000
cluster-enabled yes
cluster-config-file nodes.conf
cluster-node-timeout 5000
appendonly yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这里为了方便，直接使用docker容器来启动redis，启动的命令也基本相同，只是端口的区别&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d -p 7000:7000 --name redis-cluster-m7000 --network private -v /Users/geksong/Documents/share/redis/cluster/7000/redis.conf:/usr/local/etc/redis/redis.conf redis:latest redis-server /usr/local/etc/redis/redis.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当按如上方式处理之后，其实这六个节点还没有构建成一个集群，而是六个节点在各自的集群里，相互之间互不相认，基本是下面这个状态
&lt;img src=&quot;/assets/images/redis-cluster/cluster-node-init.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;要让这六个节点能到一个集群里，需要通过&lt;code class=&quot;highlighter-rouge&quot;&gt;cluster meet&lt;/code&gt;，让节点和集群内容的任意一个节点完成握手，如下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cluster meet 172.18.0.9 7100
+OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;cluster meet握手的过程就类似tcp的握手，只是其中的meet和pong消息，发送方都会带上自己的信息，以让对手方将自己的信息记录到对手方的数据结构里。如下
&lt;img src=&quot;/assets/images/redis-cluster/cluster-node-handshake.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当所有的节点经过握手之后，此时六个节点就在一个集群里，这时通过&lt;code class=&quot;highlighter-rouge&quot;&gt;cluster nodes&lt;/code&gt;能够查看到这个集群里总共有多少个节点。如下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cluster nodes
e638732a15e2504086315073353807a114ea6c6e 172.18.0.11:7102@17102 master - 0 1537414196548 0 connected
cd0de5cabd77e2fc0a09fa27fb347d84c2b660f4 172.18.0.7:7001@17001 myself,master - 0 1537414196000 5 connected
a6fec01802860834b1f8341617cf1d0ea9b35fee 172.18.0.8:7002@17002 master - 0 1537414195000 2 connected
7dc58e6dabe06ea201b366087626a86ce835f96b 172.18.0.9:7100@17100 master - 0 1537414195544 3 connected
409d3572f9e6e8f6c1d63f582b7adbb5dc852097 172.18.0.10:7101@17101 master - 0 1537414195043 4 connected
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;但此时从输出中能看到所有的节点的角色都是master，是因为还没有分配master和slave的关系，这时通过&lt;code class=&quot;highlighter-rouge&quot;&gt;cluster replicate&lt;/code&gt;可以将当前的节点配置为目标节点的slave。如下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cluster replicate 21d776ddfcc26c61ff8d81ec9ad023b1812cb32d
+OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;当通过replicate分配了master和slave的关系之后，可以从cluster nodes的输出看到master和slave的关系。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cluster nodes
$741
409d3572f9e6e8f6c1d63f582b7adbb5dc852097 172.18.0.10:7101@17101 slave cd0de5cabd77e2fc0a09fa27fb347d84c2b660f4 0 1537538414197 5 connected
cd0de5cabd77e2fc0a09fa27fb347d84c2b660f4 172.18.0.7:7001@17001 master - 0 1537538413089 5 connected 5001-16383
a6fec01802860834b1f8341617cf1d0ea9b35fee 172.18.0.8:7002@17002 master - 0 1537538414197 2 connected
21d776ddfcc26c61ff8d81ec9ad023b1812cb32d 172.18.0.6:7000@17000 myself,master - 0 1537538413000 1 connected 0-5000
7dc58e6dabe06ea201b366087626a86ce835f96b 172.18.0.9:7100@17100 slave 21d776ddfcc26c61ff8d81ec9ad023b1812cb32d 0 1537538413189 3 connected
e638732a15e2504086315073353807a114ea6c6e 172.18.0.11:7102@17102 slave a6fec01802860834b1f8341617cf1d0ea9b35fee 0 1537538413000 2 connected
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;此时整个集群如下
&lt;img src=&quot;/assets/images/redis-cluster/cluster-all.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;经历了节点间握手，主从配置是否当前的集群就ok了，其实不然，此时集群还是处于下线状态，当尝试执行redis的读写命令的时候，会抛出错误。如下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set dddd tt
-CLUSTERDOWN Hash slot not served

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;从错误返回中能看到是因为这个集群里的hash slots还没有分配，所以所有的master节点都不知道自己应该处理哪些hash slots。redis cluster提供了&lt;code class=&quot;highlighter-rouge&quot;&gt;cluster addslots&lt;/code&gt;命令来为节点分配
服务的hash slots。但是只能具体的每个slot去加，所以这里写了个脚本去处理这个事情&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;slots=&quot;&quot;

for(( ind = $4; ind &amp;lt;= $5; ind++ ))
do
    slots=${slots}&quot; &quot;${ind}
done

(
    echo cluster $3 ${slots};
    sleep 10;
    echo quit;
) | telnet $1 $2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将此内容保存到一个sh文件中即可，分配slots时，只需要像如下的方式执行&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./cluster-slots.sh 127.0.0.1 7000 0 5000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;即可将0到5000范围的所有hash slots分配给&lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1 7000&lt;/code&gt;这个节点及它的所有slave节点&lt;/p&gt;

&lt;p&gt;当所有16384个hash slots都分配完成之后，此时再通过&lt;code class=&quot;highlighter-rouge&quot;&gt;cluster info&lt;/code&gt;命令则可看到集群是可用状态，且发送redis命令给任意节点，都不会再报错了。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cluster info
$519
cluster_state:ok
cluster_slots_assigned:16384
cluster_slots_ok:16384
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:6
cluster_size:2
cluster_current_epoch:5
cluster_my_epoch:1
cluster_stats_messages_ping_sent:16142
cluster_stats_messages_pong_sent:16116
cluster_stats_messages_meet_sent:4
cluster_stats_messages_sent:32262
cluster_stats_messages_ping_received:16114
cluster_stats_messages_pong_received:16146
cluster_stats_messages_meet_received:2
cluster_stats_messages_received:32262
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;命令执行过程&quot;&gt;命令执行过程&lt;/h2&gt;
&lt;p&gt;当向redis cluster中的某个master节点发送一个redis 命令的时候，master收到这个命令，会对key进行crc16的算法得到一个整数，然后将此整数对16384进行取模运算，结果就是这个key所对应的hash slot，
如果该slot属于当前master所负责的范围，则会执行对应的命令处理器执行。否则将返回&lt;code class=&quot;highlighter-rouge&quot;&gt;+MOVED&lt;/code&gt;，返回值中将带有slot所在的节点的ip和port。客户端需要重新将命令发送给对应ip:port。
&lt;img src=&quot;/assets/images/redis-cluster/cluster-commond-exe.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里节点是如何快速区分出key是否应该是自己服务，并且在不是自己的服务范围的时候能准确的返回给客户端slot对应的节点的ip和port呢？这个跟redis cluster内部存储集群状态的数据结构有关，如下图
&lt;img src=&quot;/assets/images/redis-cluster/cluster-data-struct.png&quot; alt=&quot;&quot; /&gt;
其中的clusterState记录了当前集群的一个配置纪元，以及一个16384长度的clasterNode指针数组，这里数组的每个index对应的就是hash slot，当数组中的某一个index为null，则表示当前集群里没有处理这个
slot的节点，集群不可服务。同理，当需要寻找一个hash slot应该是哪个节点负责处理时，只需要直接通过数组的index取值即可，O(1)的常量时间复杂度。而当需要知道当前节点应该处理哪些hash slots时，则是
在clusterNode里有一个16384/8长度的long数组，这个数组里每个值都是8位二进制，每个二进制位代表了对应的slot，值只有0和1，如果是0，则表示当前这个二进制位对应的slot不属于当前节点，否则则属于，同样也是O(1)时间复杂度就能确定一个slot是否应该是当前节点负责。&lt;/p&gt;

&lt;h2 id=&quot;ha&quot;&gt;HA&lt;/h2&gt;
&lt;p&gt;谈到高可用围绕几个问题&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;集群里master节点可以挂几个&lt;/li&gt;
  &lt;li&gt;slave如果断线重连会不会丢数据&lt;/li&gt;
  &lt;li&gt;master切换的时候能提供服务吗，数据会不会丢&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 22 Sep 2018 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2018/09/redis-cluster/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/redis-cluster/</guid>
        
        
      </item>
    
      <item>
        <title>disruptor</title>
        <description>&lt;p&gt;disruptor 是LMAX公司开源的无锁队列库。和java的阻塞队列很像，设计的初衷都是为了在线程间传输消息或事件。但disruptor有一些独有的特性&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;支持事件广播给所有消费者&lt;/li&gt;
  &lt;li&gt;事件内存预分配&lt;/li&gt;
  &lt;li&gt;无锁&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;组件&quot;&gt;组件&lt;/h2&gt;
&lt;h3 id=&quot;ring-buffer&quot;&gt;Ring Buffer&lt;/h3&gt;
&lt;p&gt;Ring buffer是个环形队列，在disruptor中负责存储和更新传输的Event&lt;/p&gt;

&lt;h3 id=&quot;sequence&quot;&gt;Sequence&lt;/h3&gt;
&lt;p&gt;Sequence被用来标注disruptor中其他组件在ringbuffer中操作的位置。每个consumer(EventProcessor)和disruptor自身都会持有一个Sequence，绝大多数的并发操作都依赖于对Sequence的更新操作，因此Sequence和AtomicLong一样支持大多数的线程安全操作，但Sequence比AtomicLong提供的一个优化是避免了&lt;a href=&quot;http://ifeve.com/falsesharing/&quot;&gt;伪共享问题&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/disruptor-arch.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;bytebuffer&quot;&gt;ByteBuffer&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;缓冲区&lt;/li&gt;
  &lt;li&gt;可分配jvm内存也可以直接分配操作系统内存&lt;/li&gt;
  &lt;li&gt;可切换读和写模式&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 18 Sep 2018 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2018/09/disruptor-quick-buffer/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/disruptor-quick-buffer/</guid>
        
        
      </item>
    
      <item>
        <title>rocketmq console</title>
        <description>
</description>
        <pubDate>Tue, 21 Aug 2018 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2018/08/rocketmq-devenv/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/rocketmq-devenv/</guid>
        
        
      </item>
    
      <item>
        <title>Google jib镜像打包试水</title>
        <description>&lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;

&lt;p&gt;Jib是google开源的镜像构建工具，提供以maven plugin的方式实现应用打包成docker的镜像。最主要的目标是将dockerfile，docker build，docker push这样偏发布运维层面的事情对开发者屏蔽，想想一个应用开发者当需要创建一个应用生成镜像时要写一个复杂的Dockerfile，是何其痛苦的事情。jib则帮做了这件事情，使得应用开发不再需要关注镜像打包的细节，集成在mvn package阶段，coder just coding。Jib的打包是docker 镜像中的层的更新，打包更快，没有改变的层不会重复打包。一个基础工具能达到提高coder的开发效率，帮助coder聚焦在自己擅长的领域就是一个完美的基础工具。&lt;/p&gt;

&lt;p&gt;官方文档说的目标&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;更快 - 能更快的发布更新。Jib将应用拆分成多个层，从类里拆分依赖，使得有更新时不再需要Docker完全重新打包&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;可覆盖更新 - 重新打包没有变更的应用时总是同一个镜像。节省不必要的重复更新。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;减少命令操作 - 减少在打镜像过程中的命令行操作。直接使用maven或gradle实现编译打包push到远程镜像仓库。再也不需要写Dockerfile然后调用docker build/push&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;示例&quot;&gt;示例&lt;/h2&gt;

&lt;p&gt;本例使用Jib打包一个jibdemo的latest镜像并推送到本地的docker registry &lt;a href=&quot;https://github.com/geksong/jibdemo&quot;&gt;源码&lt;/a&gt;
因为实际都是maven的plugin跑，所以这里直接先贴&lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.sixpence&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jibdemo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;jar&lt;span class=&quot;nt&quot;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;jibdemo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;jibdemo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;project.reporting.outputEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project.reporting.outputEncoding&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;java.version&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/java.version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;jib-maven-plugin.version&amp;gt;&lt;/span&gt;0.9.6&lt;span class=&quot;nt&quot;&gt;&amp;lt;/jib-maven-plugin.version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-compiler-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;

			&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Jib --&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.google.cloud.tools&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jib-maven-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${jib-maven-plugin.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;allowInsecureRegistries&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/allowInsecureRegistries&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;from&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;image&amp;gt;&lt;/span&gt;openjdk:8-jre-alpine&lt;span class=&quot;nt&quot;&gt;&amp;lt;/image&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;credHelper&amp;gt;&lt;/span&gt;osxkeychain&lt;span class=&quot;nt&quot;&gt;&amp;lt;/credHelper&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;/from&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;to&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;image&amp;gt;&lt;/span&gt;localhost:5000/jibdemo:latest&lt;span class=&quot;nt&quot;&gt;&amp;lt;/image&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;credHelper&amp;gt;&lt;/span&gt;osxkeychain&lt;span class=&quot;nt&quot;&gt;&amp;lt;/credHelper&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;/to&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;container&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;mainClass&amp;gt;&lt;/span&gt;org.sixpence.jibdemo.BootStrapApplication&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mainClass&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;/container&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span class=&quot;nt&quot;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;build&lt;span class=&quot;nt&quot;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;主要关注&lt;code class=&quot;highlighter-rouge&quot;&gt;plugins/plugin/&lt;/code&gt;，需要引用jib plugin，即&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;groupId&amp;gt;com.google.cloud.tools&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;jib-maven-plugin&amp;lt;/artifactId&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;configuration&lt;/code&gt;主要是对镜像打包过程使用到的配置(0.9.x版本的配置和0.1.x版本的配置标签名不同，本例使用是0.9.6版本的Jib)，Jib支持的配置如下:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;标签名&lt;/th&gt;
      &lt;th&gt;值类型&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;from&lt;/td&gt;
      &lt;td&gt;含子属性&lt;/td&gt;
      &lt;td&gt;参见from子属性&lt;/td&gt;
      &lt;td&gt;配置该应用打包所使用的基础镜像名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;to&lt;/td&gt;
      &lt;td&gt;含子属性&lt;/td&gt;
      &lt;td&gt;没有默认值，这个标签必须要显示写明&lt;/td&gt;
      &lt;td&gt;配置该应用最终打包成的镜像名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;container&lt;/td&gt;
      &lt;td&gt;含子属性&lt;/td&gt;
      &lt;td&gt;参见container子属性&lt;/td&gt;
      &lt;td&gt;配置镜像的container&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;useOnlyProjectCache&lt;/td&gt;
      &lt;td&gt;boolean&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;配置cache的范围，如果设置为true，jib在不同的gradle项目间共享缓存&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;allowInsecureRegistries&lt;/td&gt;
      &lt;td&gt;boolean&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;这个值如果设置为true，Jib会用http作为https的fallback策略，当https请求不通时，会使用http请求&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;from&lt;/code&gt;的子属性&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;属性名&lt;/th&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;image&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gcr.io/distroless/java&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;基础镜像&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;credHelper&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;无&lt;/td&gt;
      &lt;td&gt;docker pull验证证书类型的后缀名&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;container&lt;/code&gt;的子属性&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;属性名&lt;/th&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;jvmFlags&lt;/td&gt;
      &lt;td&gt;list&lt;/td&gt;
      &lt;td&gt;无&lt;/td&gt;
      &lt;td&gt;容器内jvm启动时的环境变量&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mainClass&lt;/td&gt;
      &lt;td&gt;String&lt;/td&gt;
      &lt;td&gt;支持推导&lt;/td&gt;
      &lt;td&gt;容器的entrypoint的主类&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;args&lt;/td&gt;
      &lt;td&gt;list&lt;/td&gt;
      &lt;td&gt;无&lt;/td&gt;
      &lt;td&gt;启动主类时main方法的入参&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ports&lt;/td&gt;
      &lt;td&gt;list&lt;/td&gt;
      &lt;td&gt;无&lt;/td&gt;
      &lt;td&gt;运行时容器对外暴露的端口&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;format&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;Docker&lt;/td&gt;
      &lt;td&gt;镜像的类型，jib还支持OCI镜像&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;useCurrentTimestamp&lt;/td&gt;
      &lt;td&gt;boolean&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;默认时，Jib会抹掉所有时间戳以保证镜像的可再现性，如果此值被设置为true，Jib会把镜像的创建时间标记为镜像的构建时间，这样牺牲了可再现性来方便可以轻松的判断镜像是什么时候创建的&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;执行&lt;code class=&quot;highlighter-rouge&quot;&gt;mvn package&lt;/code&gt;则可以对当前应用打包，Jib会将镜像推送&lt;code class=&quot;highlighter-rouge&quot;&gt;to&lt;/code&gt;标签指定的镜像地址上。&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Jul 2018 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2018/07/docker-jib/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/docker-jib/</guid>
        
        
      </item>
    
      <item>
        <title>BTC交易记录数据结构</title>
        <description>
</description>
        <pubDate>Fri, 29 Jun 2018 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2018/06/btc-trans-data-structure/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/06/btc-trans-data-structure/</guid>
        
        
      </item>
    
      <item>
        <title>区块链概述</title>
        <description>&lt;p&gt;关于区块链的描述有很多，有的描述为分布式账本，有的描述为是分布式数据库，有的定义为去中心化的对等网络。从技术上的角度讲，我更愿意认为它是在全网范围内的一种分布式架构。产生这样的理解是因为本质上来说它是分布式的，当然我们现在所普遍采用的微服务架构实际上都是分布式的，但关键在于这个分布式服务架构节点所在的范围，微服务架构里所有的节点都是集中的(这里的集中并不是指机房，而是节点所属的主体，也就是所有这些节点是属于同一个公司，这个公司对这些节点拥有完全的控制权)，而区块链则是节点分布在全世界的网络范围里，没有哪个公司或者个人对全世界网络范围里的节点拥有绝对的控制权。
区块链本质是一个链中每个块的数据的hash值构成的一个单向链表，链中的每个块都会记录前一个块的hash值，通过顺序遍历能够从最新的一个块一直回溯到最原始的块。&lt;/p&gt;

&lt;h1 id=&quot;区块链的组件构成&quot;&gt;区块链的组件构成&lt;/h1&gt;
&lt;h2 id=&quot;信息载体&quot;&gt;信息载体&lt;/h2&gt;
&lt;p&gt;信息载体是一个区块链中所记录的实体信息，这个实体信息是时间有序的，实际上在现实世界里，任何产生的事情都是时间有序的，所以实际上任何的信息都可以作为信息载体记录在区块链里。比特币将地址都地址之间的转账记录在区块链里，以太坊将以太坊地址之间的转账记录在区块链里，实际上你也可以将你和你爱人的甜蜜时刻记录在区块链里，这样你们的美好时光将永远保留下来，并在全世界范围内，被所有的节点记录在案。信息载体里通常是在某个时间点发生了某某事情这样的一个信息，比如在2016年06月10号X地址向Y地址转账了B聪，或者是在2016年05月20号X向Y求婚了。关于详细的信息载体可以看这篇&lt;a href=&quot;&quot;&gt;BTC的交易记录数据结构解析&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;区块&quot;&gt;区块&lt;/h2&gt;
&lt;p&gt;区块实际上是对一段时间内产生的信息载体进行打包的一个记录，区块中会记录当前区块所在链中的索引值(通常叫块高度)，块产生的时间，数据量的大小，块里的记录总数，前一个块的hash值，当前块的hash值。关于块中的的数据信息可以看这篇&lt;a href=&quot;&quot;&gt;BTC的块数据结构解析&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;链&quot;&gt;链&lt;/h2&gt;
&lt;p&gt;链实际上是一个虚的一个数据结构，在区块链中，所有的区块（除了第一个块）都会记录前一个区块的hash值，同时也会记录自己的hash值，通过这样一个新区块记录旧区块的hash值的方式将所有的区块串联成一个链表。关于hash值的计算可以看这篇&lt;a href=&quot;&quot;&gt;BTC的块hash值算法&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;p2p网络&quot;&gt;P2P网络&lt;/h2&gt;
&lt;p&gt;由于区块链是在全网范围内的，所以当一个节点创建了一个新的区块之后需要将这个区块广播全网所有的节点，但这里无法像微服务结构里一样通过一个集中化的注册中心获取所有节点的ip，所以类似p2p下载的方式是最好的选择，也就是将新的区块只广播到就近的一些节点，再由这些节点广播到更多的网络节点上。关于p2p对等网络可以看这篇&lt;a href=&quot;&quot;&gt;BTC的p2p网络模型&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Jun 2018 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2018/06/blockchain-summary/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/06/blockchain-summary/</guid>
        
        
      </item>
    
      <item>
        <title>mongodb cli 简单使用</title>
        <description>&lt;h2 id=&quot;连接远程主机&quot;&gt;连接远程主机&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mongo -u uname -p pwd ip:port/dbname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;批量执行命令&quot;&gt;批量执行命令&lt;/h2&gt;
&lt;p&gt;mongodb client 可执行js脚本，但js里不是简单的mongo命令堆积。借用mongo的jsapi查询
或更新数据，脚本如下:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var cursor = db.activationSource.find({&quot;$and&quot;:[{&quot;source&quot;:4},{&quot;idfa&quot;:{&quot;$in&quot;:['6E45C0AE-89BA-4AFF-BC60-27059042EA65','5B2059B8-7E52-444C-A222-51DBB02D7EE0']}}]}, {&quot;callbackUrl&quot;:1});
print(cursor.size());
while(cursor.hasNext()) {
        var tmp = cursor.next();
        print(tmp.callbackUrl);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;mongo 执行此js，通过shell命令可写入到文件&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mongo -u uname -p pwd ip:port/dbname queryCallback.js &amp;gt; querycall.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 21 Aug 2015 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2015/08/mongodb-cli/</link>
        <guid isPermaLink="true">http://localhost:4000/2015/08/mongodb-cli/</guid>
        
        
      </item>
    
      <item>
        <title>spring mvc &amp; velocity</title>
        <description>&lt;h2 id=&quot;pomxml&quot;&gt;pom.xml&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.geksong.finance&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;finance-activity-web&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;war&lt;span class=&quot;nt&quot;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;finance-activity-web Maven Webapp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://maven.apache.org&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;spring.boot.version&amp;gt;&lt;/span&gt;1.2.5.RELEASE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/spring.boot.version&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-webmvc&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;4.2.0.RELEASE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;commons-fileupload&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;commons-fileupload&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.3.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;4.2.0.RELEASE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.fasterxml.jackson.core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jackson-databind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.6.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.sf.json-lib&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;json-lib&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.4&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;classifier&amp;gt;&lt;/span&gt;jdk15&lt;span class=&quot;nt&quot;&gt;&amp;lt;/classifier&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.alibaba&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;fastjson&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.2.6&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;ch.qos.logback&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;logback-classic&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.1.3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.slf4j&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;log4j-over-slf4j&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.7.7&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;javax.servlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;javax.servlet-api&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.1.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;junit&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;junit&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;4.11&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.googlecode.xmemcached&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;xmemcached&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;jedis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jedis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.1.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;commons-pool&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;commons-pool&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.5.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.commons&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;commons-lang3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;finalName&amp;gt;&lt;/span&gt;finance-activity-web&lt;span class=&quot;nt&quot;&gt;&amp;lt;/finalName&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.tomcat.maven&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;tomcat7-maven-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;port&amp;gt;&lt;/span&gt;8081&lt;span class=&quot;nt&quot;&gt;&amp;lt;/port&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&amp;gt;&lt;/span&gt;/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-surefire-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.1.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;testFailureIgnore&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/testFailureIgnore&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;c&quot;&gt;&amp;lt;!--skipTests&amp;gt;true&amp;lt;/skipTests --&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;includes&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;include&amp;gt;&lt;/span&gt;**/*Test.java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/include&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/includes&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;argLine&amp;gt;&lt;/span&gt;-Xmx1024m&lt;span class=&quot;nt&quot;&gt;&amp;lt;/argLine&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;resourcesservlet-contextxml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;resources/servlet-context.xml&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;beans&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:context=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:mvc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/mvc&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;locations&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;file:${app.properties.file}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;context:component-scan&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;base-package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.geksong.finance.activity&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 拦截器堆栈	--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;mvc:annotation-driven/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&amp;lt;mvc:interceptors&amp;gt;
        &amp;lt;mvc:interceptor&amp;gt;
            &amp;lt;mvc:mapping path=&quot;/front/**&quot;/&amp;gt;
            &amp;lt;ref bean=&quot;frontLoginInterceptor&quot;/&amp;gt;
        &amp;lt;/mvc:interceptor&amp;gt;
    &amp;lt;/mvc:interceptors&amp;gt;--&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&amp;lt;bean class=&quot;org.springframework.web.servlet.view.BeanNameViewResolver&quot;&amp;gt;
        &amp;lt;property name=&quot;order&quot; value=&quot;1&quot; /&amp;gt;
    &amp;lt;/bean&amp;gt;--&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&amp;lt;bean name=&quot;jsonView&quot;
          class=&quot;org.springframework.web.servlet.view.json.MappingJackson2JsonView&quot;&amp;gt;
    &amp;lt;/bean&amp;gt;--&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;prefix&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;suffix&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.jsp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;multipartResolver&quot;&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- one of the properties available; the maximum file size in bytes 2M
        &amp;lt;property name=&quot;maxUploadSize&quot; value=&quot;2097152&quot; /&amp;gt;
        --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 上传文件异常配置
    &amp;lt;bean id=&quot;exceptionResolver&quot; class=&quot;org.springframework.web.servlet.handler.SimpleMappingExceptionResolver&quot;&amp;gt;
        &amp;lt;property name=&quot;exceptionMappings&quot;&amp;gt;
            &amp;lt;props&amp;gt;
                &amp;lt;prop key=&quot;java.lang.Exception&quot;&amp;gt;
                    fileupload_error
                &amp;lt;/prop&amp;gt;
            &amp;lt;/props&amp;gt;
        &amp;lt;/property&amp;gt;
    &amp;lt;/bean&amp;gt;
    --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;resourceslogbackxml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;resources/logback.xml&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;LOG_HOME&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${logback.home}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 控制台输出 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.core.ConsoleAppender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;level&amp;gt;&lt;/span&gt;info&lt;span class=&quot;nt&quot;&gt;&amp;lt;/level&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;encoder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&amp;lt;pattern&amp;gt;%d{yyyy-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %class - %msg%n&amp;lt;/pattern&amp;gt;--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;%date{ISO8601} %-5level [%thread] %logger{32} - %message%n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/encoder&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;root&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;resourcesapplicationcontext-commonxml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;resources/applicationContext-common.xml&lt;/code&gt;&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;beans&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:aop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:tx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:jdbc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/jdbc&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:context=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:task=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/task&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:dubbo=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://code.alibabatech.com/schema/dubbo&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;default-autowire=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;byName&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;context:annotation-config&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;task:annotation-driven&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;executor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myExecutor&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;task:executor&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myExecutor&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pool-size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ##############以下内容无需修改,也无需关心################# --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- =========用户可定义属性配置文件=========== --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;propertyConfigurer&quot;&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ignoreUnresolvablePlaceholders&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;locations&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;file:${app.properties.file}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;order&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;webappweb-infwebxml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;webapp/WEB-INF/web.xml&lt;/code&gt;&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;web-app&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://java.sun.com/xml/ns/javaee&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2.5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;display-name&amp;gt;&lt;/span&gt;fc activity front&lt;span class=&quot;nt&quot;&gt;&amp;lt;/display-name&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- spring 初始化 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;context-param&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;classpath:applicationContext-common.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/context-param&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;listener&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;listener-class&amp;gt;&lt;/span&gt;org.springframework.web.context.ContextLoaderListener&lt;span class=&quot;nt&quot;&gt;&amp;lt;/listener-class&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/listener&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter-name&amp;gt;&lt;/span&gt;encoding filter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter-name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter-class&amp;gt;&lt;/span&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter-class&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;forceEncoding&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;encoding&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter-mapping&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter-name&amp;gt;&lt;/span&gt;encoding filter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter-name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter-mapping&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;SpringMVC&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;classpath:servlet-context.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;load-on-startup&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/load-on-startup&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;SpringMVC&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;*.do&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;controller&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;controller&lt;/code&gt;&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@Controller
public class Activity618 {
    @Autowired
    private P2pBasicInformationService p2pBasicInformationService;
    @RequestMapping(&quot;/finance/activity/618&quot;)
    public String welcome(Map&amp;lt;String, Object&amp;gt; model) {
        model.put(&quot;time&quot;, new Date());
        model.put(&quot;message&quot;, &quot;hello&quot;);
        return &quot;welcome&quot;;
    }

    @RequestMapping(&quot;/finance/activity/718&quot;)
    public String toIndex(Model model) {
        P2pBasicInformation p2pBasicInformation = p2pBasicInformationService.getP2pBasicInfomation(&quot;10000027&quot;);
        model.addAttribute(&quot;message&quot;, &quot;是老骥伏枥时间&quot;);
        return &quot;index/index&quot;;
    }

    @ResponseBody
    @RequestMapping(&quot;/finance/activity/findModel&quot;)
    public ActivityModel findModel() {
        ActivityModel activityModel = new ActivityModel();
        activityModel.setAge(34);
        activityModel.setName(&quot;上来就撒娇&quot;);
        return activityModel;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;faq&quot;&gt;FAQ&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;如何使用单元测试跑web的测试
测试web url可使用spring mvc 提供的test模块，其中包含了request和response的mock&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import org.junit.Before;
import org.junit.Test;
import org.junit.runner.JUnitCore;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.ResponseEntity;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import static org.springframework.test.web.servlet.setup.MockMvcBuilders.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import org.springframework.test.web.servlet.MvcResult;
import org.springframework.web.context.WebApplicationContext;

/**
 * Created by geksong on 15/8/5.
 */
@RunWith(SpringJUnit4ClassRunner.class)
@WebAppConfiguration
@ContextConfiguration(locations = {&quot;classpath:applicationContext-common.xml&quot;, &quot;classpath:servlet-context.xml&quot;})
public class Activity618Test {
    @Autowired
    private WebApplicationContext wac;

    private MockMvc mockMvc;

    @Before
    public void setup() {
        this.mockMvc = webAppContextSetup(this.wac).build();
    }

    @Test
    public void testToIndex() throws Exception{
        MvcResult result = this.mockMvc.perform(get(&quot;/finance/activity/findModel&quot;))
                .andExpect(status().isOk()).andReturn();
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;如何跑此项目
可借助于maven提供的tomcat plugin。 =mvn tomcat7:run= 即可启动此web工程&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 21 Aug 2015 14:32:24 +0800</pubDate>
        <link>http://localhost:4000/2015/08/springmvc-velocity/</link>
        <guid isPermaLink="true">http://localhost:4000/2015/08/springmvc-velocity/</guid>
        
        
      </item>
    
  </channel>
</rss>
